
@page "/"

@using Splendor.Core
@using Splendor.Core.Actions

@inject GameState GameState

<div style="display: inline-block">

    <Market Nobles       = "@GameState.Nobles.ToArray()"
            Tiers        = "@GameState.Tiers.OrderBy(t => t.Tier).ToArray()"
            Budget       = "@GameState.CurrentPlayer.Budget"
            CanReserve   = "@(GameState.CurrentPlayer.ReservedCards.Count < 3)"
            SubmitAction = "@ApplyAction" />

    <Bank Model             = "@GameState.Bank"
          SubmitAction      = "@ApplyAction"
          AddActionReaction = "@AddActionReaction" />
</div>

<div style="display: inline-block; vertical-align: top">
   
    @foreach (var player in Players)
    {
        <Player Model        = "@player"
                MyTurn       = "@(player == GameState.CurrentPlayer)"
                SubmitAction = "@ApplyAction" />
    }

</div>

@code
{
    private IEnumerable<Core.Player> Players => GameState.Players
        .SkipWhile(p => p != GameState.CurrentPlayer)
        .Concat(GameState.Players.TakeWhile(p => p != GameState.CurrentPlayer));

    private void AddActionReaction(Action reaction) =>
        m_ActionReactions.Add(reaction);

    private void ApplyAction(IAction action)
    {
        if (action is null) return;

        var game = new Game(GameState);

        game.CommitTurn(action);

        GameState = game.State;

        m_ActionReactions.ForEach(r => r());

        StateHasChanged();
    }

    private readonly List<Action> m_ActionReactions = new List<Action>();
}